# -*- mode: snippet -*-
# name: Initial .dir-locals.el configuration
# key: dirl
# --

(
 ;; Project Tasks
 (nil . ((vg-project-tasks . (
                              ("PNPM: Install" . (lambda()
                                                  (vg-shell-command-in-project-root "pnpm install")
                                                  ))
                              ("PNPM: Format" . (lambda()
                                                  (vg-shell-command-in-project-root "pnpm run format")
                                                  ))
                              ("PNPM:Root Test" . (lambda()
                                                  (vg-shell-command-in-project-root "pnpm --filter @root/root run test")
                                                  ))
                              ))))

 ;; Typescript
 (typescript-mode . (
                     (vg-on-save-lambda . (lambda()
                                            (vg-shell-command-in-project-root (concat "pnpm exec prettier --write " (buffer-file-name)) t)
                                            (message "The file has been formatted using prettier!")))))

 ;; JSON
 (json-mode . (
                     (vg-on-save-lambda . (lambda()
                                            (vg-shell-command-in-project-root (concat "pnpm exec prettier --write " (buffer-file-name)) t)
                                            (message "The file has been formatted using prettier!")))))

 ;; PHPCS:
 (php-mode . ((flycheck-php-phpcs-executable . (concat (vg-get-project-root) "vendor/bin/phpcs"))))

 ;; ESlint:
 (js-mode . ((flycheck-javascript-eslint-executable . (concat (vg-get-project-root) "node_modules/.bin/eslint"))))

 ;; Stylelint:
 (css-mode . ((flycheck-css-stylelint-executable . (concat (vc-root-dir) "node_modules/.bin/stylelint"))
              (flycheck-stylelintrc . (concat (vc-root-dir) ".stylelintrc.json"))))
)
